#change the name of the file from stability.files to whatever suits your study
make.contigs(file=mites.stability, processors=4)
summary.seqs(fasta=current, processors=12)
screen.seqs(fasta=current, group=current, maxambig=0, maxlength=275)
unique.seqs()
count.seqs(name=current, group=current)
align.seqs(fasta=current, reference=silva.bacteria.v4.fasta, flip=t)
screen.seqs(fasta=current, count=current, start=1968, end=11550, maxhomop=8, processors=12)
filter.seqs(fasta=current, vertical=T, trump=.)
unique.seqs(fasta=current, count=current)
pre.cluster(fasta=current, count=current, diffs=2)
chimera.uchime(fasta=current, count=current, dereplicate=t)
remove.seqs(fasta=current, accnos=current)
classify.seqs(fasta=current, count=current, reference=silva.nr_v123.align, taxonomy=silva.nr_v123.tax, cutoff=60)
remove.lineage(fasta=current, count=current, taxonomy=current, taxon=Mitochondria-unknown-Archaea-Eukaryota-Chloroplast)
cluster.split(fasta=current, count=current, taxonomy=current, splitmethod=classify, taxlevel=4, cutoff=0.03)
make.shared(list=current, count=current, label=0.03)
classify.otu(list=current, count=current, taxonomy=current, label=0.03)
dist.seqs(fasta=current, output=lt, processors=12)
get.oturep(fasta=current, count=current, list=current, method=abundance)
count.groups(shared=current)
collect.single(shared=current, calc=chao-invsimpson, freq=100)
rarefaction.single(shared=current, calc=sobs, freq=100, processors=12)
summary.single(shared=current, calc=nseqs-coverage-sobs-invsimpson-shannon)
dist.shared(shared=current)
heatmap.bin(shared=current, scale=log2, numotu=100)
heatmap.sim(shared=current, calc=jclass-thetayc)
summary.shared(shared=current, calc=sharedchao, all=T, processors=12)
tree.shared(phylip=current)
pcoa(phylip=current)
nmds(phylip=current, mindim=3, maxdim=3)
amova(phylip=current, design=current)
homova(phylip=current, design=current)
corr.axes(axes=current, shared=current, method=spearman, numaxes=3)
metastats(shared=current, design=current)
dist.shared(shared=current, calc=thetayc-jclass)
phylo.diversity(tree=current, count=current, rarefy=T)
venn(shared=current, groups=male-female-juvenile)
#preliminary core
#change file names
system(cp mites.list core.list)
system(cp mites.trim.contigs.good.unique.good.filter.unique.precluster.denovo.uchime.pick.pick.count_table core.count_table)
system(cp mites.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta core.fasta)
system(cp mites.contigs.good.pick.pick.groups core.groups)
merge.groups(design=core.list, group=core.groups)
merge.groups(design=core.list, count=core.count_table)
system(awk '{print $1}' core.merge.count_table > core.accnos)
get.seqs(accnos=core.accnos, fasta=core.fasta)
get.seqs(accnos=core.accnos, group=core.merge.groups)
#otu
dist.seqs(fasta=core.pick.fasta, cutoff=.25)
cluster(column=core.pick.dist, count=core.merge.count_table, cutoff=0.03)
make.shared(list=core.pick.opti_mcc.list, group=core.merge.pick.groups, label=0.03)
get.sharedseqs(list=current, group=current, label=0.03, output=accnos)
get.seqs(accnos=current, fasta=current)
get.seqs(accnos=current, group=current)
get.seqs(accnos=current, list=current)
unique.seqs(fasta=current)
count.seqs(name=current, groups=current)
classify.seqs(fasta=core.pick.pick.unique.fasta, template=silva.nr_v123.align, taxonomy=silva.nr_v123.tax, group=core.merge.groups)
classify.otu(list=core.pick.opti_mcc.0.03.pick.list, count=core.merge.count_table, taxonomy=core.pick.pick.unique.nr_v123.wang.taxonomy, label=0.03)
#phylogenetic
dist.seqs(fasta=core.pick.pick.unique.fasta, output=lt)
get.oturep(fasta=current, count=core.pick.pick.count_table, list=core.pick.opti_mcc.0.03.pick.list, method=abundance)
#alpha
system(cp core.pick.opti_mcc.shared single.shared)
venn(shared=single.shared)
summary.single(shared=single.shared, calc=nseqs-coverage-sobs-invsimpson)
collect.shared(shared=core.pick.opti_mcc.shared, calc=sharedsobs-sharedchao, all=true)
rarefaction.single(shared=current, calc=sobs, freq=100, processors=12)
summary.shared(shared=current, calc=nseqs-coverage-sobs-invsimpson)
#beta
heatmap.bin(shared=current, scale=log2, numotu=50)
dist.shared(shared=current)
heatmap.sim(shared=current, calc=jclass-thetayc)
#change group names
summary.shared(calc=sharedchao, groups=juvenile-female-male, all=T)
tree.shared(calc=thetayc-jclass)
#taxonomy abundances
#change group names
system(cp core.pick.opti_mcc.0.03.pick.list final.list)
system(cp core.merge.pick.pick.groups final.groups)
make.shared(group=final.groups, list=final.list)
rarefation.single(shared=final.shared, calc=sobs, freq=100, processors=12)
get.groups(group=final.groups, groups=juvenile, list=final.list)
system(mv final.pick.groups juvenile.groups)
system(mv final.0.03.pick.list juvenile.list)
get.groups(group=final.groups, groups=male, list=final.list)
system(mv final.pick.groups male.groups)
system(mv final.0.03.pick.list male.list)
get.groups(group=final.groups, groups=female, list=final.list)
system(mv final.pick.groups female.groups)
system(mv final.0.03.pick.list female.list)
classify.otu(list=juvenile.list, taxonomy=final.pick.taxonomy, group=juvenile.groups)
classify.otu(list=male.list, taxonomy=final.pick.taxonomy, group=male.groups)
classify.otu(list=female.list, taxonomy=final.pick.taxonomy, group=female.groups)

#SAVE THE FOLLOWING FILES!!!
system(mkdir analysis)

#For sequence representation of all subgroups
system(cp mites.trim.contigs.good.unique.good.filter.unique.precluster.pick.nr_v123.wang.tax.summary analysis/)

#For otu representation of all subgroups (e.g. AJM1, AJM2, etc.)
system(cp mites.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.an.unique_list.0.03.cons.tax.summary analysis/)

#For sequence rep of all groups
system(cp core.pick.pick.nr_v123.wang.tax.summary analysis/)

#For otu rep of all groups
system(cp core.pick.pick.opti_mcc.0.03.cons.tax.summary analysis/)

#For conserved core otus
system(cp core.pick.opti_mcc.0.03.pick.0.03.cons.tax.summary analysis/)

#For subgroup nseqs, sobs, coverage, invsimp, and shannon diversity indicies
system(cp mites.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.an.unique_list.groups.summary analysis/)

#For group nseqs, sobs, coverage, invsimp, and shannon diversity indicies
system(cp single.groups.summary analysis/)

#For venn diagram
system(cp single*.svg analysis/)

#For group rarefaction
system(cp single.groups.rarefaction analysis/)

#For core rarefaction
system(cp final.groups.rarefaction analysis/)

#For jclass and thetayc amova, homova, pcoa, and nmds
system(cp mites.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.an.unique_list.jclass.0.03.lt.ave.amova analysis/)
system(cp mites.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.an.unique_list.thetayc.0.03.lt.ave.amova analysis/)
system(cp mites.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.an.unique_list.jclass.0.03.lt.ave.homova analysis/)
system(cp mites.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.an.unique_list.thetayc.0.03.lt.ave.homova analysis/)
system(cp mites.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.an.unique_list.jclass.0.03.lt.nmds.axes analysis/)
system(cp mites.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.an.unique_list.thetayc.0.03.lt.nmds.axes analysis/)
system(cp mites.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.an.unique_list.jclass.0.03.lt.pcoa.axes analysis/)
system(cp mites.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.an.unique_list.thetayc.0.03.lt.pcoa.axes analysis/)